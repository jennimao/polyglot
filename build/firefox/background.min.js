(()=>{var e={358:e=>{e.exports={upperBaselinePos:.15,lowerBaselinePos:.85,primaryImageScale:.75,primaryImageOpacity:1,primaryTextScale:.95,primaryTextOpacity:1,primaryTextColor:"#ffffff",secondaryImageScale:.5,secondaryImageOpacity:1,secondaryTextScale:1,secondaryTextStroke:2,secondaryTextOpacity:1,secondaryTextColor:"#ffffff",secondaryLanguageMode:"audio",secondaryLanguageLastUsed:void 0,secondaryLanguageLastUsedIsCaption:void 0}}},t={};function s(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,s),a.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=s(358),t=s.n(e);let n=Object.assign({},t());function o(e){return Object.keys(t()).every((t=>t in e))}function a(){n.primaryImageOpacity=1,n.primaryTextOpacity=1,n.secondaryImageOpacity=1,n.secondaryTextOpacity=1,chrome.storage.local.set({settings:n},(()=>{console.log("Settings: saved into local storage")}))}chrome.storage.local.get(["settings"],(e=>{console.log("Loaded: settings=",e.settings),e.settings&&o(e.settings)?n=e.settings:a()}));let c={};function r(){Object.keys(c).map((e=>c[e])).forEach((e=>{try{e.postMessage({settings:n})}catch(e){console.error("Error: cannot dispatch settings,",e)}}))}chrome.runtime.onConnect.addListener((e=>{e.sender&&e.sender.tab?function(e){const s=e.sender&&e.sender.tab&&e.sender.tab.id;s&&(c[s]=e,console.log(`Connected: ${s} (tab)`),e.postMessage({settings:n}),e.onMessage.addListener((c=>{if(c.settings){console.log("Received from injected agent: settings=",c.settings);let s=Object.assign({},n);s=Object.assign(s,c.settings),o(s)?n=s:(n=Object.assign({},t()),e.postMessage({settings:n})),a(),r()}else c.startPlayback?(console.log("Saturate icon"),function(e){chrome.browserAction.setIcon({tabId:e,path:{16:"icon16.png",32:"icon32.png"}})}(s)):c.stopPlayback&&(console.log("Desaturate icon"),function(e){chrome.browserAction.setIcon({tabId:e,path:{16:"icon16-gray.png",32:"icon32-gray.png"}})}(s))})),e.onDisconnect.addListener((()=>{delete c[s],console.log(`Disconnected: ${s} (tab)`)})))}(e):function(e){const s=e.name;console.log(`Connected: ${s} (internal)`),"settings"===s&&(e.postMessage({settings:n}),e.onMessage.addListener((s=>{if(s.settings){console.log("Received: settings=",s.settings);let a=Object.assign({},n);a=Object.assign(a,s.settings),o(a)?n=a:(n=Object.assign({},t()),e.postMessage({settings:n}))}else n=Object.assign({},t()),e.postMessage({settings:n});a(),r()}))),e.onDisconnect.addListener((()=>{console.log(`Disconnected: ${s} (internal)`)}))}(e)}))})()})();